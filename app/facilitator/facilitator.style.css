#controlBar {
	width: 80%;
	margin-left: auto;
	margin-right: auto;
	border-radius: 50px;
	padding: 10px 0px 5px 0px;
}

code {
	border: 1px solid gray;
}

code span {
	margin-left: auto;
	margin-right: auto;
}

.facilitator-status label {
	margin-left: 12px;
}

.facilitator-controls button {
	margin-left: 12px;
}

/* ======= Custom Bounce from animate.css - http://daneden.me/animate ======= */
.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

@-webkit-keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  70% {
    -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    -webkit-transform: translate3d(0, -5px, 0);
    transform: translate3d(0, -5px, 0);
  }

  90% {
    -webkit-transform: translate3d(0,-1px,0);
    transform: translate3d(0,-1px,0);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  70% {
    -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    -webkit-transform: translate3d(0, -5px, 0);
    transform: translate3d(0, -5px, 0);
  }

  90% {
    -webkit-transform: translate3d(0,-1px,0);
    transform: translate3d(0,-1px,0);
  }
}

.bounce {
  -webkit-animation-name: bounce;
  animation-name: bounce;
  -webkit-transform-origin: center bottom;
  transform-origin: center bottom;
}

@-webkit-keyframes flash {
  0%, 50%, 100% {
    opacity: 1;
  }

  25%, 75% {
    opacity: 0;
  }
}

/* ========================================================================== */

.panel-body#dashboard {
	min-height: 578px;
	padding: 15px 0px 15px 0px;
}

#groups {
	min-height: 768px;
	width: 75%;
	margin-left: auto;
	margin-right: auto;
}

#groupHeader {
	display: inline;
	margin: 0px 0px 0px 0px;
	height: 0px;
}

#thoughtList {
	table-layout: fixed;
	padding: 0px 15px 0px 15px;
}

/* Drag & Drop List CSS ===================================================== */
/* http://marceljuenemann.github.io/angular-drag-and-drop-lists/demo/#/simple */

/* Needed for correct positioning of placeholder element */
ul[dnd-list],
ul[dnd-list] > li {
	position: relative;
}

/* Must have min height, otherwise you can't drop once it's empty */
ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/* Makes sense to hide original element being
   dragged to give impression it is being moved */
ul[dnd-list] .dndDraggingSource {
    display: none;
}

/* Styling for the placeholder box that is auto added during dragging */
ul[dnd-list] .dndPlaceholder {
    display: inline-block;
    background-color: #ddd;
    width: 282px;
	height: 194px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
ul[dnd-list] li {
    background-color: #fff;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: inline-block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/* Show selected elements in green? */
/*ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}*/

/* ========================================================================== */

.thoughtItem {
	display: inline-block;
	margin: 10px 10px 10px 10px;
	border-radius: 10px;
	list-style: none;	
}

.thought-content {
	overflow: hidden;
	padding: 10px 10px 10px 10px;
	width: 282px;
	height: 194px;
}

/*.thoughtItem div {
}*/

.thought i {
	font: 20pt;
	float: right;
	margin-left: 10px;
}

.p {
    width: 524px;
    position: relative;
}

.cB {
    clear:both;
}

.delete-thought-icon {
	font-size: 30px;
	margin-right: -20px;
	margin-top: -12px;
	float: right;
}

.highlighted-for_deletion .delete-thought-icon {
	color: red;
}

.highlighted-for_deletion {
	/*color: red;*/
	/*background-color: red;*/
	border-color: red;
}